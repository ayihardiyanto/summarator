name: Pex Distribution
on:
  # Enable manual run
  workflow_dispatch:
    inputs:
      lane:
        description: "Fastlane lane to use (beta OR promote_to_production OR production)"
        required: true
        default: "beta"
  # Refs/tags push events to matching v*, i.e. v1.0, v20.15.10
  push:
    branches:
      - github-action
      - master
    tags:
      - "v*"

jobs:
  build:
    name: Build APK
    runs-on: macos-latest
    # TODO: Uncomment this once ios build is applicable
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     target: ["ipa", "appbundle"]
    steps:
      # ? Used for internal or private module
      # Set up ssh private key
      # - uses: shimataro/ssh-key-action@v2
      #   with:
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     name: id_rsa
      #     known_hosts: ${{ secrets.KNOWN_HOSTS }}
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - name: Setting Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.0.1"
          channel: "stable"
      - name: Extracting Keystore
        run: |
          cd android/ && echo "${{ secrets.RELEASE_KEYSTORE }}" > upload-keystore.jks.asc
          gpg --batch --passphrase "${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}" -d -o upload-keystore.jks upload-keystore.jks.asc
      - name: Extracting Google Service
        run: |
          cd android/app/ && echo "${{ secrets.GOOGLE_SERVICES }}" > google-services.json.asc
          gpg --batch --passphrase "${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}" -d -o google-services.json google-services.json.asc
      - name: Extracting key.properties
        run: |
          cd android/ && echo "${{ secrets.KEY_PROPERTIES }}" > key.properties.asc
          gpg --batch --passphrase "${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}" -d -o key.properties key.properties.asc
      - name: Setting up Summarator Dependencies
        run: flutter pub get
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Building Summarator
      # TODO: change appbundle to ${{ matrix.target }}
        run: flutter build appbundle --release --build-name=${{steps.extract_branch.outputs.branch}} --build-number=1
  fastlane-deploy-prod:
    name: Distribute Production App
    runs-on: macos-latest
    steps:
      # Set up ssh private key
      # ? Used for internal or private module
      # - uses: shimataro/ssh-key-action@v2
      #   with:
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     name: id_rsa
      #     known_hosts: ${{ secrets.KNOWN_HOSTS }}
      # Set up Flutter.
      - name: Setting Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.0.1"
          channel: "stable"
      - run: flutter doctor -v
      # Checkout Summarator code and get packages.
      - name: Checkout Summarator Code
        uses: actions/checkout@v2
      - name: Setting up PeX Dependencies
        run: flutter pub get
      # Setup Ruby, Bundler, and Gemfile dependencies
      - name: Set up ruby env
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "2.6"
          bundler-cache: true
          working-directory: android
      # Build and deploy with Fastlane (by default, to beta track) ðŸš€.
      # Naturally, promote_to_production only deploys.
      # - run: bundle exec fastlane ${{ github.event.inputs.lane || 'beta' }} distribute
      - run: bundle exec fastlane distribute
        working-directory: android

      # - name: Configure Keystore
      #   run: |
      #     echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/upload-keystore.jks
      #     echo "storeFile=upload-keystore.jks" >> key.properties
      #     echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
      #     echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> key.properties
      #     echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
      #   env:
      #     PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
      #     KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
      #     KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
      #     KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
      #   working-directory: android

      # # Build and deploy with Fastlane (by default, to beta track) ðŸš€.
      # # Naturally, promote_to_production only deploys.
      # - run: bundle exec fastlane ${{ github.event.inputs.lane || 'beta' }}
      #   env:
      #     PLAY_STORE_CONFIG_JSON: ${{ secrets.PLAY_STORE_CONFIG_JSON }}
      #   working-directory: android
